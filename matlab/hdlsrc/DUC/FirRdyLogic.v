// -------------------------------------------------------------
// 
// File Name: hdlsrc\DUC\FirRdyLogic.v
// Created: 2025-03-29 15:53:02
// 
// Generated by MATLAB 24.2, HDL Coder 24.2, and Simulink 24.2
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: FirRdyLogic
// Source Path: DUC/DUC_module_with_ready/CIC_Comp Filter 1/FirRdyLogic
// Hierarchy Level: 2
// Model version: 3.89
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module FirRdyLogic
          (clk,
           rst_n,
           enb,
           dinSwitch,
           dinVldSwitch,
           coeff,
           haltProcess,
           dinSM,
           dinVldSM);


  input   clk;
  input   rst_n;
  input   enb;
  input   signed [15:0] dinSwitch;  // sfix16_En15
  input   dinVldSwitch;
  input   signed [15:0] coeff;  // sfix16_En15
  input   haltProcess;
  output  signed [15:0] dinSM;  // sfix16_En15
  output  dinVldSM;


  wire syncReset;
  reg signed [15:0] firRdy_xdin;  // sfix16
  reg  firRdy_xdinVld;
  reg [2:0] firRdy_state;  // ufix3
  reg  firRdy_readyReg;
  reg [4:0] firRdy_count;  // ufix5
  reg signed [15:0] firRdy_xcoeffin;  // sfix16
  reg signed [15:0] firRdy_xdin_next;  // sfix16_En15
  reg  firRdy_xdinVld_next;
  reg [2:0] firRdy_state_next;  // ufix3
  reg  firRdy_readyReg_next;
  reg [4:0] firRdy_count_next;  // ufix5
  reg signed [15:0] firRdy_xcoeffin_next;  // sfix16_En15
  reg  readySM;
  reg signed [15:0] dinSM_1;  // sfix16_En15
  reg  dinVldSM_1;
  reg signed [15:0] coeffS;  // sfix16_En15
  reg  firRdy_out2_0;


  assign syncReset = 1'b0;

  // rdyLogic
  always @(posedge clk)
    begin : firRdy_process
      if (rst_n == 1'b0) begin
        firRdy_state <= 3'b000;
        firRdy_xdin <= 16'sb0000000000000000;
        firRdy_xdinVld <= 1'b0;
        firRdy_xcoeffin <= 16'sb0000000000000000;
        firRdy_readyReg <= 1'b1;
        firRdy_count <= 5'b00000;
      end
      else begin
        if (enb) begin
          firRdy_xdin <= firRdy_xdin_next;
          firRdy_xdinVld <= firRdy_xdinVld_next;
          firRdy_state <= firRdy_state_next;
          firRdy_readyReg <= firRdy_readyReg_next;
          firRdy_count <= firRdy_count_next;
          firRdy_xcoeffin <= firRdy_xcoeffin_next;
        end
      end
    end

  always @(coeff, dinSwitch, dinVldSwitch, firRdy_count, firRdy_readyReg, firRdy_state,
       firRdy_xcoeffin, firRdy_xdin, firRdy_xdinVld, haltProcess, syncReset) begin
    firRdy_xdin_next = firRdy_xdin;
    firRdy_xdinVld_next = firRdy_xdinVld;
    firRdy_state_next = firRdy_state;
    firRdy_readyReg_next = firRdy_readyReg;
    firRdy_count_next = firRdy_count;
    firRdy_xcoeffin_next = firRdy_xcoeffin;
    if (( ! haltProcess) && ( ! syncReset)) begin
      case ( firRdy_state)
        3'b000 :
          begin
            dinSM_1 = dinSwitch;
            firRdy_out2_0 = dinVldSwitch;
            coeffS = coeff;
            firRdy_state_next = 3'b000;
            firRdy_readyReg_next = 1'b1;
            firRdy_xdin_next = 16'sb0000000000000000;
            firRdy_xdinVld_next = 1'b0;
            firRdy_xcoeffin_next = 16'sb0000000000000000;
            if (dinVldSwitch) begin
              firRdy_state_next = 3'b001;
              firRdy_readyReg_next = 1'b0;
            end
          end
        3'b001 :
          begin
            dinSM_1 = 16'sb0000000000000000;
            firRdy_out2_0 = 1'b0;
            coeffS = 16'sb0000000000000000;
            firRdy_state_next = 3'b011;
            if (dinVldSwitch) begin
              firRdy_state_next = 3'b010;
              firRdy_xdin_next = dinSwitch;
              firRdy_xdinVld_next = 1'b1;
              firRdy_xcoeffin_next = coeff;
            end
          end
        3'b010 :
          begin
            dinSM_1 = 16'sb0000000000000000;
            firRdy_out2_0 = 1'b0;
            coeffS = 16'sb0000000000000000;
            firRdy_state_next = 3'b010;
            if (firRdy_count == 5'b10111) begin
              firRdy_state_next = 3'b100;
            end
            firRdy_readyReg_next = 1'b0;
          end
        3'b011 :
          begin
            if (firRdy_count == 5'b10111) begin
              firRdy_readyReg_next = 1'b1;
              firRdy_state_next = 3'b000;
            end
            dinSM_1 = 16'sb0000000000000000;
            coeffS = 16'sb0000000000000000;
            firRdy_out2_0 = 1'b0;
          end
        3'b100 :
          begin
            firRdy_state_next = 3'b011;
            dinSM_1 = firRdy_xdin;
            firRdy_out2_0 = firRdy_xdinVld;
            coeffS = firRdy_xcoeffin;
            firRdy_xdin_next = dinSwitch;
            firRdy_xdinVld_next = dinVldSwitch;
            firRdy_xcoeffin_next = coeff;
          end
        default :
          begin
            dinSM_1 = 16'sb0000000000000000;
            firRdy_out2_0 = 1'b0;
            coeffS = 16'sb0000000000000000;
            firRdy_state_next = 3'b000;
            firRdy_xdin_next = 16'sb0000000000000000;
            firRdy_xdinVld_next = 1'b0;
            firRdy_xcoeffin_next = 16'sb0000000000000000;
            firRdy_readyReg_next = 1'b1;
          end
      endcase
    end
    else begin
      firRdy_state_next = 3'b000;
      firRdy_xdin_next = 16'sb0000000000000000;
      firRdy_xcoeffin_next = 16'sb0000000000000000;
      firRdy_xdinVld_next = 1'b0;
      firRdy_readyReg_next = 1'b0;
      dinSM_1 = 16'sb0000000000000000;
      firRdy_out2_0 = 1'b0;
      coeffS = 16'sb0000000000000000;
    end
    if ((dinVldSwitch || (firRdy_count > 5'b00000)) || firRdy_out2_0) begin
      if (((firRdy_count == 5'b10111) || haltProcess) || syncReset) begin
        firRdy_count_next = 5'b00000;
      end
      else begin
        firRdy_count_next = firRdy_count + 5'b00001;
      end
    end
    readySM = firRdy_readyReg;
    dinVldSM_1 = firRdy_out2_0;
  end

  assign dinSM = dinSM_1;

  assign dinVldSM = dinVldSM_1;

endmodule  // FirRdyLogic

