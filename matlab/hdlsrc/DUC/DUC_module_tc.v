// -------------------------------------------------------------
// 
// File Name: hdlsrc\DUC\DUC_module_tc.v
// Created: 2025-03-25 14:21:11
// 
// Generated by MATLAB 24.2, HDL Coder 24.2, and Simulink 24.2
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: DUC_module_tc
// Source Path: DUC_module_tc
// Hierarchy Level: 1
// 
// Master clock enable input: clk_enable
// 
// enb         : identical to clk_enable
// enb_1_1_1   : identical to clk_enable
// enb_1_625_0 : 625x slower than clk with last phase
// enb_1_625_1 : 625x slower than clk with phase 1
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module DUC_module_tc
          (clk,
           rst_n,
           clk_enable,
           enb,
           enb_1_1_1,
           enb_1_625_0,
           enb_1_625_1);


  input   clk;
  input   rst_n;
  input   clk_enable;
  output  enb;
  output  enb_1_1_1;
  output  enb_1_625_0;
  output  enb_1_625_1;


  reg [9:0] count625;  // ufix10
  wire comp_0_tmp;
  wire phase_0_tmp;
  reg  phase_0;
  wire enb_1_625_0_1;
  wire comp_1_tmp;
  wire phase_1_tmp;
  reg  phase_1;
  wire enb_1_625_1_1;


  assign enb = clk_enable;

  assign enb_1_1_1 = clk_enable;

  // Count limited, Unsigned Counter
  //  initial value   = 1
  //  step value      = 1
  //  count to value  = 624
  always @(posedge clk)
    begin : counter_625_process
      if (rst_n == 1'b0) begin
        count625 <= 10'b0000000001;
      end
      else begin
        if (clk_enable) begin
          if (count625 >= 10'b1001110000) begin
            count625 <= 10'b0000000000;
          end
          else begin
            count625 <= count625 + 10'b0000000001;
          end
        end
      end
    end

  assign comp_0_tmp = count625 == 10'b1001110000;

  assign phase_0_tmp = comp_0_tmp & clk_enable;

  always @(posedge clk)
    begin : phase_delay_process
      if (rst_n == 1'b0) begin
        phase_0 <= 1'b0;
      end
      else begin
        if (clk_enable) begin
          phase_0 <= phase_0_tmp;
        end
      end
    end

  assign enb_1_625_0_1 = phase_0 & clk_enable;

  assign enb_1_625_0 = enb_1_625_0_1;

  assign comp_1_tmp = count625 == 10'b0000000000;

  assign phase_1_tmp = comp_1_tmp & clk_enable;

  always @(posedge clk)
    begin : phase_delay_1_process
      if (rst_n == 1'b0) begin
        phase_1 <= 1'b1;
      end
      else begin
        if (clk_enable) begin
          phase_1 <= phase_1_tmp;
        end
      end
    end

  assign enb_1_625_1_1 = phase_1 & clk_enable;

  assign enb_1_625_1 = enb_1_625_1_1;

endmodule  // DUC_module_tc

